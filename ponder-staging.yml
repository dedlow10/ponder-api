AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.
Parameters: 
  BucketName:
    Type: String
  CodeKey:
    Type: String

Resources:
  DecisionMakerAPI:
    Name: DecisionMakerAPIStaging
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: s3://ponder-code/Ponder-Cloudformation/ponder-api-staging.yml
      StageName: stage
      

  AcceptInvitation:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-AcceptInvitation
      Handler: functions/acceptInvitation.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /friends/invitations
            Method: POST
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  AddFriend:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-AddFriend
      Handler: functions/addfriend.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }      
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /friends
            Method: POST
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  AuthorizeUser:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-AuthorizeUser
      Handler: authorizers/authorizeruser.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /MyResource
            Method: ANY

  CountMyDecisionVotes:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-CountMyDecisionVotes
      Handler: functions/countmydecisionvotes.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /votes/me/count
            Method: GET
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  CountMyDecisions:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-CountMyDecisions
      Handler: functions/countmydecisions.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /decisions/me/count
            Method: GET
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  CreateComment:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-CreateComment
      Handler: functions/createcomment.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /comments
            Method: POST                        
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  CreateDecision:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-CreateDecision
      Handler: functions/createdecision.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /decisions
            Method: POST                        
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  DeleteComment:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-DeleteComment
      Handler: functions/deletecomment.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI  
            Path: /comments
            Method: DELETE      
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  DeleteDecision:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-DeleteDecision
      Handler: functions/deletedecision.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: '/decisions/{id}'
            Method: DELETE      
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  DeleteFriend:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-DeleteFriend
      Handler: functions/deletefriend.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI  
            Path: /friends
            Method: DELETE      
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  FindUsers:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-FindUsers
      Handler: functions/findusers.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /users
            Method: GET            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  GetDecisionComments:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-GetDecisionComments
      Handler: functions/getdecisioncomments.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: '/comments'
            Method: GET      
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  GetDecisionById:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-GetDecisionById
      Handler: functions/getdecisionbyid.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: '/decisions/{id}'
            Method: GET      
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  GetFriendInvitations:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-GetFriendInvitations
      Handler: functions/getfriendinvitations.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /friends/invitations
            Method: GET            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  GetFriends:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-GetFriends
      Handler: functions/getfriends.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /friends
            Method: GET            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  GetFriendsDecisions:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-GetFriendsDecisions
      Handler: functions/getfriendsdecisions.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI   
            Path: /decisions/friends
            Method: GET            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  GetMyDecisions:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-GetMyDecisions
      Handler: functions/getmydecisions.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: /decisions/me
            Method: GET            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  GetTopDecisions:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-GetTopDecisions
      Handler: functions/gettopdecisions.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI  
            Path: /decisions/top
            Method: GET            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  GetUserById:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-GetUserById
      Handler: functions/getuserbyid.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI 
            Path: '/users/{id}'
            Method: GET            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  GetVotesForDecision:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-GetVotesForDecision
      Handler: functions/getvotesfordecision.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "params" : { "path": { "id": 1 } } }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI   
            Path: '/decisions/{id}/votes'
            Method: GET            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-61ae223d
          - subnet-c89e10e6

  LoginUser:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-LoginUser
      Handler: functions/login.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "Email": "dedlow10@gmail.com", "Password": "MyAwesomePassword123" }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI   
            Path: /users/login
            Method: POST
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-61ae223d
          - subnet-c89e10e6

  RegisterDeviceToken:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-RegisterDeviceToken
      Handler: functions/registerdevicetoken.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI    
            Path: /users/device-token
            Method: POST      
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  RegisterUser:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-RegisterUser
      Handler: functions/register.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 192
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI    
            Path: /users
            Method: POST            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-61ae223d
          - subnet-c89e10e6

  ResetPassword:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-ResetPassword
      Handler: functions/resetpassword.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 192
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-61ae223d
          - subnet-c89e10e6

  SendEmail:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-SendEmail
      Handler: functions/sendemail.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 192
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'

  UpdateUser:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-UpdateUser
      Handler: functions/updateuser.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI    
            Path: '/users/{id}'
            Method: POST      
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea

  VoteDecision:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: Ponder-Staging-VoteDecision
      Handler: functions/votedecision.handler
      Runtime: nodejs8.10
      CodeUri: 
        Bucket: !Ref BucketName
        Key: !Ref CodeKey
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: 'arn:aws:iam::478373966066:role/LambdaServiceRole'
      Environment:
        Variables: { DatabaseHost: 'prodmysql.cphdeyoxcjbz.us-east-1.rds.amazonaws.com' , Database: 'DecisionMaker_Staging' }   
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Input: '{ "context" : { "authorizer-principal-id": 1}, "is-ping": true }'
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref DecisionMakerAPI
            Path: '/decisions/{id}/vote/{optionNum}'
            Method: POST            
      VpcConfig:
        SecurityGroupIds:
          - sg-0594f0e78619424b3
        SubnetIds:
          - subnet-c89e10e6
          - subnet-e54b0eea















